<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <script src="/socket.io/socket.io.js"></script>
        <link rel="stylesheet" href="./public/css/color.css" />
        <title>Document</title>
    </head>
    <body>
        <h1>채팅방</h1>
        <div id="main">
            <form id="room">
                <input type="text" id="roomName" placeholder="채팅방만들기" />
                <input type="text" id="userName" placeholder="사용자 이름" />
                <button>생성</button>
            </form>
        </div>
        <div id="room1">
            <div id="body">
                <div id="message">
                    <div id="notice"></div>
                </div>
            </div>
        </div>
        <form id="chat">
            <select id="userSelect">
                <option value="all">전체</option>
            </select>
            에게
            <input type="text" id="chatMessage" placeholder="메세지 입력" />
            <button>전송</button>
        </form>

        <script>
            const socket = io();
            const roomform = document.querySelector('#room');
            const chatform = document.querySelector('#chat');
            const message = document.querySelector('#message');
            const notice = document.querySelector('#notice');
            const select = document.querySelector('#userSelect');
            const user_option = document.createElement('option');
            let myName = '';
            // 새 참여자 알림
            socket.on('notice', (res) => {
                const div = document.createElement('div');
                const p = document.createElement('p');
                p.textContent = res;
                div.appendChild(p);
                notice.appendChild(div);
                user_option.value = res.socket.id;
            });
            // 새 메세지 알림
            socket.on('newMessage', (res) => {
                console.log(res);
                const div = document.createElement('div');
                const p = document.createElement('p');
                p.textContent = `${res.user} : ${res.message}`;
                div.appendChild(p);
                message.appendChild(div);
            });

            socket.on('back_DM', (res) => {
                const div = document.createElement('div');
                const p = document.createElement('p');
                p.textContent = `${res.user} : ${res.message}`;
                div.appendChild(p);
                message.appendChild(div);
            });

            roomform.addEventListener('submit', (e) => {
                e.preventDefault();
                const roomName = roomform.querySelector('#roomName');
                const userName = roomform.querySelector('#userName');
                if (roomName.value === '' || userName.value === '') {
                    alert('방이름과 닉네임을 적어주세요');
                    return;
                }
                socket.emit('create', { roomName: roomName.value, userName: userName.value }, () => {
                    // 전역변수에 입력한 닉네임 저장
                    myName = userName.value;
                    user_option.textContent = myName;
                    select.appendChild(user_option);
                    userName.value = '';
                });
                roomName.value = '';
            });
            chatform.addEventListener('submit', (e) => {
                e.preventDefault();
                const message = chatform.querySelector('#chatMessage');
                socket.emit('DM', { message: message.value, user: myName, sid: user_option.value });
                socket.emit('sendMessage', { message: message.value, user: myName });
                message.value = '';
            });
        </script>
    </body>
</html>
